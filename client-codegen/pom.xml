<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <artifactId>simple-monitor-client-root</artifactId>
        <groupId>fi.donhut</groupId>
        <version>2.0.0</version>
    </parent>

    <artifactId>simple-monitor-client-codegen</artifactId>
    <name>simple-monitor-client-codegen</name>
    <packaging>jar</packaging>

    <properties>
        <default.package>fi.donhut.simplemonitorclient</default.package>
        <swagger-codegen-maven-plugin-version>2.3.1</swagger-codegen-maven-plugin-version>
        <swagger-annotations-version>1.5.21</swagger-annotations-version>
    </properties>

    <dependencies>
        <!-- dependencies are needed for the client to be generated -->
        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-annotations</artifactId>
            <version>${swagger-annotations-version}</version>
        </dependency>

        <!-- You can find the dependencies for the library configuation you chose
            by looking in JavaClientCodegen. Then find the corresponding dependency on
            Maven Central, and set the versions in the property section below -->

        <!-- HTTP client: jersey-client -->
        <dependency>
            <groupId>org.glassfish.jersey.core</groupId>
            <artifactId>jersey-client</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-json-jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>org.glassfish.jersey.media</groupId>
            <artifactId>jersey-media-multipart</artifactId>
        </dependency>

        <!-- JSON processing: jackson -->
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-base</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.jaxrs</groupId>
            <artifactId>jackson-jaxrs-json-provider</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
        </dependency>

        <!-- Base64 encoding that works in both JVM and Android -->
        <dependency>
            <groupId>com.brsanthu</groupId>
            <artifactId>migbase64</artifactId>
            <version>2.2</version>
        </dependency>

        <!-- json to pojo-->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-codegen-maven-plugin</artifactId>
                <version>${swagger-codegen-maven-plugin-version}</version>
                <executions>
                    <execution>
                        <configuration>
                            <additionalProperties>
                                <additionalProperty>io.swagger.parser.util.RemoteUrl.trustAll=true</additionalProperty>
                            </additionalProperties>
                            <!-- specify the swagger yaml -->
                            <inputSpec>${project.basedir}/src/main/resources/simple-monitor-server/api-docs.json
                            </inputSpec>
                            <!-- target to generate java client code -->
                            <language>java</language>

                            <output>${project.build.directory}/generated-sources</output>
                            <apiPackage>${default.package}.generated.api</apiPackage>
                            <modelPackage>${default.package}.generated.model</modelPackage>
                            <invokerPackage>${default.package}.generated.handler</invokerPackage>
                            <generateApiDocumentation>false</generateApiDocumentation>
                            <generateModelDocumentation>false</generateModelDocumentation>
                            <generateApiTests>false</generateApiTests>
                            <skipOverwrite>false</skipOverwrite>

                            <!-- pass any necessary config options -->
                            <!-- https://github.com/swagger-api/swagger-codegen/blob/master/modules/swagger-codegen/src/main/java/io/swagger/codegen/CodegenConstants.java -->
                            <configOptions>
                                <interfaceOnly>true</interfaceOnly>
                                <dateLibrary>java8</dateLibrary>
                                <java8>true</java8>
                            </configOptions>

                            <!-- override the default library to jersey2 -->
                            <library>resttemplate</library>
                        </configuration>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
